go 1.13 新特性分析

###优化改进的地方
***

1.优化编译器的逃逸分析器，使可以安全的在栈上开辟内存，提高执行效率
2.defer性能优化，满足一定条件的defer延迟条用，将被记录在栈上，而不是堆上
3.sync.pool中对象回收机制策略优化，在1.12之前每轮的垃圾回收过程中，每个sync.pool实例中的
所有缓存的对象都将被无条件回收。在1.13之后，如果一个sync.pool实例在上一轮的
垃圾回收过程结束之后仍然被使用，则其中的缓存对象不会被回收。此举对使用sync.pool来提升
程序效率的程序来说，大大减少了因周期性的缓存对象被清楚，造成突然效率下降。
4.增加了 error wrap 包装功能。
5.从Go SDK 1.13开始，编译输出的二进制可执行文件中将包含所用Go编译器的版本和此执行文件所依赖的各种第三方库包的版本号。我们可以使用命令go version binaryfile来查看一个二进制可执行文件是使用哪个版本的编译器编译的，或者使用命令go version -m binaryfile
来查看包含在一个二进制可执行文件中的各个第三方依赖库包的版本号。
6.go modules 版本依赖管理工具特性，将从1.13开始大规模使用，GOPATH的环境地位将减弱或丧失
GOBIN的地位将上升。因为go install命令仍需要一个路径来存储生成的二进制可执行文件。另外，伴随Go modules而生的GOPROXY环境变量的设置格式得到了增强。我们可以使用下面的格式来指定多个代理：
···
GOPROXY=proxy1,proxy2,proxy3
GOPROXY=direct,https://proxy.golang.org,https://myproxy.mysite:8888
···


本文参考的链接
（go中文）[https://studygolang.com/articles/21440]